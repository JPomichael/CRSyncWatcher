//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using LinqConnect template.
// Git
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using Devart.Data.Linq;
using Devart.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace MainContext
{

    /// <summary>
    /// There are no comments for MainContext.RateCodeControl in the schema.
    /// </summary>
    [Table(Name = @"""main"".RateCodeControl")]
    public partial class RateCodeControl : INotifyPropertyChanging, INotifyPropertyChanged, ICloneable
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _HotelId;

        private string _RateCode;

        private string _AmendStatus;

        private string _AmendDays;

        private string _CancelStatus;

        private string _CancelDays;

        private string _NeedPay;

        private string _MinStay;

        private string _MaxStay;

        private string _Booking;

        private string _RmLimit;

        private int _Id;

        private string _RmType;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnHotelIdChanging(int value);
        partial void OnHotelIdChanged();
        partial void OnRateCodeChanging(string value);
        partial void OnRateCodeChanged();
        partial void OnAmendStatusChanging(string value);
        partial void OnAmendStatusChanged();
        partial void OnAmendDaysChanging(string value);
        partial void OnAmendDaysChanged();
        partial void OnCancelStatusChanging(string value);
        partial void OnCancelStatusChanged();
        partial void OnCancelDaysChanging(string value);
        partial void OnCancelDaysChanged();
        partial void OnNeedPayChanging(string value);
        partial void OnNeedPayChanged();
        partial void OnMinStayChanging(string value);
        partial void OnMinStayChanged();
        partial void OnMaxStayChanging(string value);
        partial void OnMaxStayChanged();
        partial void OnBookingChanging(string value);
        partial void OnBookingChanged();
        partial void OnRmLimitChanging(string value);
        partial void OnRmLimitChanged();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnRmTypeChanging(string value);
        partial void OnRmTypeChanged();
        #endregion

        public RateCodeControl()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for HotelId in the schema.
        /// </summary>
        [Column(Name = @"hotelId", Storage = "_HotelId", CanBeNull = false, DbType = "INT NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int HotelId
        {
            get
            {
                return this._HotelId;
            }
            set
            {
                if (this._HotelId != value)
                {
                    this.OnHotelIdChanging(value);
                    this.SendPropertyChanging();
                    this._HotelId = value;
                    this.SendPropertyChanged("HotelId");
                    this.OnHotelIdChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for RateCode in the schema.
        /// </summary>
        [Column(Name = @"rateCode", Storage = "_RateCode", CanBeNull = false, DbType = "VARCHAR NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string RateCode
        {
            get
            {
                return this._RateCode;
            }
            set
            {
                if (this._RateCode != value)
                {
                    this.OnRateCodeChanging(value);
                    this.SendPropertyChanging();
                    this._RateCode = value;
                    this.SendPropertyChanged("RateCode");
                    this.OnRateCodeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for AmendStatus in the schema.
        /// </summary>
        [Column(Name = @"amendStatus", Storage = "_AmendStatus", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string AmendStatus
        {
            get
            {
                return this._AmendStatus;
            }
            set
            {
                if (this._AmendStatus != value)
                {
                    this.OnAmendStatusChanging(value);
                    this.SendPropertyChanging();
                    this._AmendStatus = value;
                    this.SendPropertyChanged("AmendStatus");
                    this.OnAmendStatusChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for AmendDays in the schema.
        /// </summary>
        [Column(Name = @"amendDays", Storage = "_AmendDays", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string AmendDays
        {
            get
            {
                return this._AmendDays;
            }
            set
            {
                if (this._AmendDays != value)
                {
                    this.OnAmendDaysChanging(value);
                    this.SendPropertyChanging();
                    this._AmendDays = value;
                    this.SendPropertyChanged("AmendDays");
                    this.OnAmendDaysChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CancelStatus in the schema.
        /// </summary>
        [Column(Name = @"cancelStatus", Storage = "_CancelStatus", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string CancelStatus
        {
            get
            {
                return this._CancelStatus;
            }
            set
            {
                if (this._CancelStatus != value)
                {
                    this.OnCancelStatusChanging(value);
                    this.SendPropertyChanging();
                    this._CancelStatus = value;
                    this.SendPropertyChanged("CancelStatus");
                    this.OnCancelStatusChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CancelDays in the schema.
        /// </summary>
        [Column(Name = @"cancelDays", Storage = "_CancelDays", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string CancelDays
        {
            get
            {
                return this._CancelDays;
            }
            set
            {
                if (this._CancelDays != value)
                {
                    this.OnCancelDaysChanging(value);
                    this.SendPropertyChanging();
                    this._CancelDays = value;
                    this.SendPropertyChanged("CancelDays");
                    this.OnCancelDaysChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NeedPay in the schema.
        /// </summary>
        [Column(Name = @"needPay", Storage = "_NeedPay", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string NeedPay
        {
            get
            {
                return this._NeedPay;
            }
            set
            {
                if (this._NeedPay != value)
                {
                    this.OnNeedPayChanging(value);
                    this.SendPropertyChanging();
                    this._NeedPay = value;
                    this.SendPropertyChanged("NeedPay");
                    this.OnNeedPayChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MinStay in the schema.
        /// </summary>
        [Column(Name = @"minStay", Storage = "_MinStay", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string MinStay
        {
            get
            {
                return this._MinStay;
            }
            set
            {
                if (this._MinStay != value)
                {
                    this.OnMinStayChanging(value);
                    this.SendPropertyChanging();
                    this._MinStay = value;
                    this.SendPropertyChanged("MinStay");
                    this.OnMinStayChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MaxStay in the schema.
        /// </summary>
        [Column(Name = @"maxStay", Storage = "_MaxStay", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string MaxStay
        {
            get
            {
                return this._MaxStay;
            }
            set
            {
                if (this._MaxStay != value)
                {
                    this.OnMaxStayChanging(value);
                    this.SendPropertyChanging();
                    this._MaxStay = value;
                    this.SendPropertyChanged("MaxStay");
                    this.OnMaxStayChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Booking in the schema.
        /// </summary>
        [Column(Name = @"booking", Storage = "_Booking", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string Booking
        {
            get
            {
                return this._Booking;
            }
            set
            {
                if (this._Booking != value)
                {
                    this.OnBookingChanging(value);
                    this.SendPropertyChanging();
                    this._Booking = value;
                    this.SendPropertyChanged("Booking");
                    this.OnBookingChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for RmLimit in the schema.
        /// </summary>
        [Column(Name = @"rmLimit", Storage = "_RmLimit", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string RmLimit
        {
            get
            {
                return this._RmLimit;
            }
            set
            {
                if (this._RmLimit != value)
                {
                    this.OnRmLimitChanging(value);
                    this.SendPropertyChanging();
                    this._RmLimit = value;
                    this.SendPropertyChanged("RmLimit");
                    this.OnRmLimitChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [Column(Name = @"id", Storage = "_Id", AutoSync = AutoSync.OnInsert, CanBeNull = false, DbType = "INTEGER NOT NULL", IsDbGenerated = true, IsPrimaryKey = true)]
        public int Id
        {
            get
            {
                return this._Id;
            }
        }

    
        /// <summary>
        /// There are no comments for RmType in the schema.
        /// </summary>
        [Column(Name = @"rmType", Storage = "_RmType", DbType = "VARCHAR", UpdateCheck = UpdateCheck.Never)]
        public string RmType
        {
            get
            {
                return this._RmType;
            }
            set
            {
                if (this._RmType != value)
                {
                    this.OnRmTypeChanging(value);
                    this.SendPropertyChanging();
                    this._RmType = value;
                    this.SendPropertyChanged("RmType");
                    this.OnRmTypeChanged();
                }
            }
        }
    
        #region ICloneable Members

        public virtual object Clone()
        {
            RateCodeControl obj = new RateCodeControl();
            obj.HotelId = HotelId;
            obj.RateCode = RateCode;
            obj.AmendStatus = AmendStatus;
            obj.AmendDays = AmendDays;
            obj.CancelStatus = CancelStatus;
            obj.CancelDays = CancelDays;
            obj.NeedPay = NeedPay;
            obj.MinStay = MinStay;
            obj.MaxStay = MaxStay;
            obj.Booking = Booking;
            obj.RmLimit = RmLimit;
            obj.RmType = RmType;
            return obj;
        }

        #endregion
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

}
